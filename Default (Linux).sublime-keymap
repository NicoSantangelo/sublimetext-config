[
  // Shortcuts for Package manager
  { "keys": ["ctrl+shift+y"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Set Syntax "} },

  // ERB helper
  { "keys": ["ctrl+shift+."], "command": "erb" },

  // Go to the end of the line in insert mode
  { "keys": ["ctrl+shift+a"], "command": "run_macro_file", "args": {"file": "Packages/User/insert_last.sublime-macro"} },

  // Insert a semicolon (;) at the end of the line
  { "keys": ["ctrl+shift+,"], "command": "run_macro_file", "args": {"file": "Packages/User/insert_semicolon_last.sublime-macro"} },

  // Add another way to travel between panels for Vintage Origami
  { "keys": ["alt+k"], "command": "travel_to_pane", "args": {"direction": "up"}   },
  { "keys": ["alt+j"], "command": "travel_to_pane", "args": {"direction": "down"} },
  { "keys": ["alt+l"], "command": "travel_to_pane", "args": {"direction": "right"} },
  { "keys": ["alt+h"], "command": "travel_to_pane", "args": {"direction": "left"}  },

/* ==========================================================================
  Vintage
  ========================================================================== */

  // Move right in overlay (open tab)
  { "keys": ["alt+l"], "command": "move", "args": { "by": "characters", "forward": true },
    "context": [ { "key": "overlay_visible", "operator": "equal", "operand": true } ]
  },

  // Move down in overlay
  { "keys": ["alt+j"], "command": "move", "args": { "by": "lines", "forward": true },
    "context": [ { "key": "overlay_visible", "operator": "equal", "operand": true } ]
  },

  // Move up in overlay
  { "keys": ["alt+k"], "command": "move", "args": { "by": "lines", "forward": false },
    "context": [ { "key": "overlay_visible", "operator": "equal", "operand": true } ]
  },

  // Exit command mode
  { "keys": ["j", "j"], "command": "exit_insert_mode",
    "context": [ { "key": "setting.command_mode", "operand": false }, { "key": "setting.is_widget", "operand": false } ]
  },

  // Multiselection (more than one cursor)
  { "keys": ["alt+alt+k"], "command": "select_lines", "args": {"forward": false}, "context": [{"key": "setting.command_mode"}] },
  { "keys": ["alt+alt+j"], "command": "select_lines", "args": {"forward": true}, "context": [{"key": "setting.command_mode"}] },

  // Move lines
  { "keys": ["alt+shift+k"], "command": "swap_line_up", "context": [{"key": "setting.command_mode"}] },
  { "keys": ["alt+shift+j"], "command": "swap_line_down", "context": [{"key": "setting.command_mode"}] },

  // Move from tab to tab...
  { "keys": ["g", "t"], "command": "next_view", "context": [{ "key": "setting.command_mode", "operand": true }] },
  { "keys": ["alt+l"], "command": "next_view", "context": [{ "key": "overlay_visible", "operator": "equal", "operand": false }] },

  { "keys": ["g", "T"], "command": "prev_view", "context": [{ "key": "setting.command_mode", "operand": true }] },
  { "keys": ["alt+h"], "command": "prev_view", "context": [{ "key": "overlay_visible", "operator": "equal", "operand": false }] },

  //...change tab position
  { "keys": ["g", "H"], "command": "move_tab", "args": { "position": "-1" }, "context": [{ "key": "setting.command_mode" }] },
  { "keys": ["g", "L"], "command": "move_tab", "args": { "position": "+1" }, "context": [{ "key": "setting.command_mode" }] },

  //...close specific tabs
  { "keys": [",", "t"], "command": "close_others", "context": [{ "key": "setting.command_mode", "operand": true }] },
  { "keys": [",", "r"], "command": "close_to_right", "context": [{ "key": "setting.command_mode", "operand": true }] },
  { "keys": [",", "T"], "command": "close_all", "context": [{ "key": "setting.command_mode", "operand": true }] },

  // Expand pane
  { "keys": ["alt+a", "z"], "command": "max_pane" },

  // Search results
  { "keys": ["g", "o"], "command": "next_result", "context": [{ "key": "setting.command_mode" }] },
  { "keys": ["g", "O"], "command": "prev_result", "context": [{ "key": "setting.command_mode" }] },

  // Go to definition
  { "keys": ["g", "d"], "command": "goto_definition", "context": [{ "key": "setting.command_mode" }] },

  // Alignment symbols
  { "keys": ["g", "a"], "command": "alignment", "context": [{ "key": "setting.command_mode" }] },

  // Ruby change symbol
  { "keys": ["g", "r"], "command": "run_macro_file", "args": {"file": "Packages/User/ruby_symbol.sublime-macro"},
    "context": [
      { "key": "setting.command_mode" },
      { "key": "selector", "operator": "equal", "operand": "source.ruby, source.rspec, source.erb, text.haml"}
    ]
  },

  // Change quotes
  { "keys": ["g", "q"], "command": "change_quotes", "context": [{ "key": "setting.command_mode" } ] },

  // Easy Motion
  {
    "keys": [" ", "<character>"],
    "command": "easy_motion",
    "args": { "select_text": false },
    "context": [{ "key": "setting.command_mode", "operand": true }]
  },

  // FileBrowser
  {
    "keys": ["g", "f"], "command": "dired", "args": { "immediate": true },
    "context": [{ "key": "setting.command_mode", "operand": true }]
  },
  {
    "keys": ["g", "F"], "command": "dired", "args": { "immediate": true, "project": true },
    "context": [{ "key": "setting.command_mode", "operand": true }]
  },

  // Find in files
  { "keys": [",", "f"], "command": "show_panel", "args": {"panel": "find_in_files"} },

  // Matching HTML element with %
  { "keys": ["%"], "command": "run_emmet_action", "args": { "action": "matching_pair" },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.html" },
      { "key": "emmet_action_enabled.matching_pair" },
      { "key": "setting.command_mode", "operand": true }
    ]
  },

/* ==========================================================================
  GitSavvy
  ========================================================================== */

  { "keys": ["ctrl+alt+g"], "command": "gs_diff", "args": { "in_cached_mode": true } },
  { "keys": ["ctrl+alt+s"], "command": "gs_show_status" },


  // Refer to this damn PR https://github.com/divmain/GitSavvy/pull/372
  {
    "keys": ["o"],
    "command": "gs_status_open_file",
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true },
      { "key": "selector", "operator": "equal", "operand": "git-savvy.status meta.git-savvy.status.section meta.git-savvy.status.file" }
    ]
  },
  {
    "keys": ["s"],
    "command": "gs_status_stage_file",
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true },
      { "key": "selector", "operator": "equal", "operand": "git-savvy.status meta.git-savvy.status.section meta.git-savvy.status.file" }
    ]
  },
  {
    "keys": ["u"],
    "command": "gs_status_unstage_file",
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true },
      { "key": "selector", "operator": "equal", "operand": "git-savvy.status meta.git-savvy.status.section meta.git-savvy.status.file" }
    ]
  },
  {
    "keys": ["c"],
    "command": "gs_status_commit",
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true }
    ]
  },
  {
    "keys": ["F"],
    "command": "gs_diff",
    "args": { "in_cached_mode": true },
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true }
    ]
  },
  {
    "keys": ["e"],
    "command": "gs_status_diff",
    "context": [
      { "key": "setting.command_mode", "operator": "equal", "operand": true },
      { "key": "setting.git_savvy.status_view", "operator": "equal", "operand": true },
      { "key": "selector", "operator": "equal", "operand": "git-savvy.status meta.git-savvy.status.section meta.git-savvy.status.file" }
    ]
  },

/* ==========================================================================
  Transpose
  ========================================================================== */

  { "keys": ["alt+t"], "command": "transpose_char" },
  { "keys": ["alt+shift+t"], "command": "transpose_word" }
]
